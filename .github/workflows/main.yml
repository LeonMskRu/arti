name: Build and publish

on:
  workflow_dispatch:

jobs:
    build:
        name: Build for ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                include:
                    - os: windows-latest
                      artifact_name: sqlite3.dll

        steps:
            - uses: actions/checkout@v2

            - run: mkdir target

            - name: Build for Windows
              if: matrix.os == 'windows-latest'
              run: cargo build -p arti --locked --release --features static-sqlite

name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: rust
          path: target/${{ matrix.BUILD_TARGET }}/rust
          
name: Release Binary
  shell: bash
  run: |
    BIN_SUFFIX=""
    if [[ "${{ matrix.runner }}" == "windows-latest" ]]; then
      BIN_SUFFIX=".exe"
    fi

    # The built binary output location
    BIN_OUTPUT="target/${{ matrix.target }}/release/${PROJECT_NAME}${BIN_SUFFIX}"

    # Define a better name for the final binary
    BIN_RELEASE="${PROJECT_NAME}${BIN_SUFFIX}"
    BIN_RELEASE_VERSIONED="${PROJECT_NAME}-${{ github.ref_name }}-${{ matrix.name }}${BIN_SUFFIX}"

    # Move the built binary where you want it
    mv "${BIN_OUTPUT}" "./${BIN_RELEASE}"
    if [ "${{ matrix.os }}" = "windows-latest" ]; then
      7z a "./${BIN_RELEASE}-${{ matrix.name }}.zip" "./${BIN_RELEASE}"
      echo "ASSET=./${BIN_RELEASE}-${{ matrix.name }}.zip" >> $GITHUB_ENV
    else

      tar -czf "./${BIN_RELEASE}-${{ matrix.name }}.tar.gz" "./${BIN_RELEASE}"
      echo "ASSET=./${BIN_RELEASE}-${{ matrix.name }}.tar.gz" >> $GITHUB_ENV
    fi          

name: Release
  uses: softprops/action-gh-release@v1
  with:
    files: ${{ env.ASSET }} # Attach the binary to the release    
    
