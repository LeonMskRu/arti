KEY:
- Not done
. Partially done
o complete
X Won't do.


MILESTONE 0: Build a circuit and use it
   o Read a directory from disk
   o Pick random relays
   o Construct a one-hop circuit with CREATE_FAST
   o Construct a one-hop circuit with ntor
   o Build relay cells
   o Construct a multihop circuit.
   o Open a stream
   o Make a request, get a response (no sendmes yet)

MILESTONE 1: Refactoring on above
   o Stop parameterizing all APIs on TLS type.
   o Combine "create circuit" and "create first hop"?
   o More types of circent for clarity.
   o Improve testing
   o Improve documentation
   o Make sure readme is right

MILESTONE 2: Working streams
   o Improve circuit API.
   o Get an initial stream API together.
   o Make end cells work, and get sent both ways.
   o Make SENDMEs work
   o Make authenticated sendmes work.
   o Make sendme authentication optional.
   o Solve SENDME bug with doubled flood/dl tests. (0.06/0.5)
   - Circuit reactor shutdown needs to make stream reads fail (_/0.1)
   - Circuit reactor shutdown needs to make stream writes fail (_/0.5)
   - protocol failures on circuits/streams need to kill off the circuit. (_/0.5)
   - Improve testing
     - coverage on important parts of netdir (_/0.5)
     - coverage on most of tor-proto (_/1)
   - Improve documentation
     . forbid private-docs everywhere (_/0.3) [1.5h so far]
     - expand documentation in proto, netdir, cell. (_/0.2)
   - Make sure readme is right (_/0)

MILESTONE 3: Clean and tidy
   - Make sure that circuit Destroys are handled and sent correctly.
     Use ideas from circuit module. (1)
   - Complete testing in tor-proto crate. (1)
   o Better solution for deadlock in lock on sendwindow.
   - Ed25519 needs to have an "identity" non-parsed version, maybe.
   - Add a state for streams _we_ have closed where we haven't got an end
     from the other side.  Treat unexpected stream data as fatal.
     (Defend against DropMark attack from 25573) (1)
   - Add other "partially-closed" states for streams and circuits (1)
   - Less copying, esp around Box<RawCellBody>.  Consider bytes crate. (1)
   - Is this "reactor" business a sensible design?  Is there a better one? (??)
   - Use better types for cases when only a few messages are possible. (0.3)
   - Get a data-oriented stream API (1)
   - Make all APIs conform to best practices (1)
   - Figure out which consensus method we require, and say so. (0.2)
   - Audit closing-stuff code (1)
       - Make a plan for what closes when
       - Make sure everything closes when it is supposed to.
   - Refactor XXXX and TODO code; make sure everything is tested and
     documented.


MILESTONE A: Experimental client use
   - Make connections on demand (1)
   - Build circuits on demand (2)
   - Downloading directory information, using compression and diffs. (3)
   - Minimal stable API. (2)
   - Optionally, expose a socks port (0.5)
   - Begin using semver. (0.1)

MILESTONE B: Secure minimal client
   - Correct path selection (2)
   - Timeouts
      - Circuit timeout logic (2??)
      - Connection timeout logic. (2??)
      - What other kinds of timeouts?
   - Connection padding (link protocol 5) (2)
   - Circuit padding (with padding machines) (4???)
   - Build preemptive circuits (2)
   - Guard nodes (3)
   - Change behavior depending on network parameters (3???)
   - CBT logic? (4???)
   - Pathbias logic (4???)
   - Figure out where to put a specific async executor and/or TLS
     implementation in our stack. (3???)

MILESTONE C: Client feature parity
   - V3 onion services (10)
   - Fairness on circuits/streams? (5??)
   - Support for using bridges (2??)
   - Pluggable transport support (5??)
   - Controller API? (10???)
   - Dormant mode? (2???)
   - Transparent proxy mode(s) (???)


MILESTONE H:
   - Be a hidden service

MILESTONE R: Relay support
   - Relay TLS handshake support
   - Directory cache support
   - Fairness support
   - Better circuit queues and circuitmuxes (for performance)
   - Statistics collection
   - Key management
   - Pluggable transports (server side)
   - Being a bridge
   - Self-testing
   - Publishing descriptors
   - Address discovery and configuration
   - DNS lookup
   - KIST scheduler
   - DoS-resistence handling
   - Rate-limiting
   - Accounting





- Spec issues
  - Test vectors
    . Add test vectors for ntor
    - Add test vectors for relay crypto
    - Add test vectors for hs-ntor
    - Add test vectors for hs-relay crypto
    - Add test vectors for TAP
  - Clarity
    - END cell format
  - Directory consistency
    - "-----BEGIN" should not be a valid keyword
    - Whitespace at start of line, y/n?  Mixed whitespace, y/n? CR, y/n?
    - UTF-8.


PROBABLY NEVER:
   - TAP
   - Link protocols before 4.
   - Older consensus methods


